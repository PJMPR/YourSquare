package dao;

import java.sql.Connection;
import java.sql.SQLException;

import dao.mappers.*;
import dao.uow.IUnitOfWork;
import model.*;

import java.util.*;

public class AdRepository extends RepositoryBase<Ad> implements IAdRepository {


	public AdRepository(Connection connection,
						IMapResultSetIntoEntity<Ad> mapper,
					 IUnitOfWork uow) {
		super(connection, mapper, uow);
	}
	
	@Override
	protected String tableName() {
		return "ad";
	}
	
	protected String createTableSql() {
		return "CREATE TABLE ad ("
					+ "id INT GENERATED BY DEFAULT AS IDENTITY,"
					+ "title VARCHAR(50),"
					+ "content VARCHAR(50),"
					+ "fee INT"
				    + ")";
	}

	@Override
	protected String insertSql() {
		return "INSERT INTO ad(title,content,fee,user_Id) VALUES(?,?,?,?)";
	}

	@Override
	protected String updateSql() {
		return "UPDATE ad set title=?, content=?, fee=? WHERE id=?";
	}

	@Override
	protected String selectByIdSql() {
		return "SELECT * FROM Ad WHERE id=?";
	}
	@Override
	protected String selectAllSql() {
		return "SELECT * FROM Ad";
	}

	@Override
	protected String deleteSql() {
		return "DELETE FROM Ad WHERE id = ?";
	}


	@Override
	protected void setupInsert(Ad entity) throws SQLException {
		insert.setString(1, entity.getTitle());
		insert.setString(2, entity.getContent());
		insert.setInt(3, entity.getFee());
	}

	@Override
	protected void setupUpdate(Ad entity) throws SQLException {
		update.setString(1,entity.getTitle());
		update.setString(2,entity.getContent());
		update.setInt(3,entity.getFee());
		update.setInt(5, entity.getId());
	}

	public List<Ad> byUser(User user) {
		return null;
	}

}
